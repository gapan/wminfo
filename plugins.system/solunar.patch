--- main.c.old	2012-05-21 13:55:30.000000000 +0200
+++ main.c	2012-09-13 18:29:00.000000000 +0200
@@ -54,7 +54,7 @@
   printf ("  -d, --datetime [date_time]     set date and/or time\n");
   printf ("  --datetime help                show date/time format\n");
   printf ("  -f, --full                     print full data\n");
-  printf ("  -h                             print brief help message\n");
+  printf ("  -h, --help                     print brief help message\n");
   printf ("  -l, --latlong [+DDMM+DDDMM]    latitude/longitude\n");
   printf ("  --latlong help                 show lat/long format\n");
   printf ("  --days                         list significant days in year\n");
@@ -301,9 +301,9 @@
     {"latlong", required_argument, NULL, 'l'},
     {"longhelp", no_argument, &opt_longhelp, 0},
     {"quiet", no_argument, &opt_quiet, 'q'},
-    {"utc", no_argument, &opt_utc, 'v'},
+    {"utc", no_argument, &opt_utc, 'u'},
     {"version", no_argument, &opt_version, 'v'},
-    {"list-named-days", no_argument, &opt_list_named_days, 0},
+    {"days", no_argument, &opt_list_named_days, 0},
     {0, 0, 0, 0},
     };
 
@@ -325,7 +325,7 @@
           {
           opt_utc = TRUE;
           }
-        if (strcmp (long_options[option_index].name, "list-named-days") == 0)
+        if (strcmp (long_options[option_index].name, "days") == 0)
           {
           opt_list_named_days = TRUE;
           }
@@ -634,7 +634,7 @@
         SUNTIMES_CIVIL_TWILIGHT, 
         opt_utc, tz, workingLatlong, datetimeObj); 
       print_sunset_time ("           Civil twilight ends: ", 
-        SUNTIMES_NAUTICAL_TWILIGHT, 
+        SUNTIMES_CIVIL_TWILIGHT, 
         opt_utc, tz, workingLatlong, datetimeObj); 
 
       print_sunrise_time ("      Nautical twilight starts: ", 
@@ -695,7 +695,7 @@
       for (i = 0; i < nevents; i++)
         {
         char *s = DateTime_time_to_string_local (events[i], tz);
-        printf ("                       Moonset: %s\n", s);
+        printf ("                      Moonrise: %s\n", s);
         free (s);
         DateTime_free (events[i]);
         }
--- TODO.old    2012-05-21 14:19:58.000000000 +0200
+++ TODO        2012-09-13 18:56:00.000000000 +0200
@@ -4,7 +4,7 @@
 year, or the current year if none set. The rest of the date information
 is ignored. To get the days for a specific year you can do, for example,
 
-solunar --list-named-days --datetime 1#2013
+solunar --days --datetime 1#2013
 
 Note all dates and times, both specified and output, are local to the home
 locale, or the city specified by --city, unless --utc is given. The --utc
