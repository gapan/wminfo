#!/bin/bash

# wminfo plugin: displays animated cyclist

# command: wminfo -p cyclist.wmi -u 0 -t 4 -s 0 -b#000000 -f#00ffff

# the cyclist comes from the static ASCII art by Peter E. Bergner

#  __O
# `\<,
# O/ O

counter="$HOME/.wminfo/.counter.cyclist.tmp"

if [ ! -e $counter ]
then
    step=0
    B="^'*~^'*~^'*~"
    echo step=$step > $counter
    echo B=\"$B\" >> $counter
fi

. $counter

C[1]='                                    '
C[2]='                                    '
C[3]='                                    '
C[4]='         O        ,        O        '
C[5]='         _O       <,        0       '
C[6]='         __O      \<,      / O      '
C[7]='          __O     `|<,     0| 0     '
C[8]='           __O     `\<,     O/ O    '
C[9]='           __O     `|<,     0| 0    '
C[10]='           __O     `\<,     O/ O    '
C[11]='           __O     `|<,     0| 0    '
C[12]='           __O     `\<,     O/ O    '
C[13]='           __O     `|<,     0| 0    '
C[14]='           __O     `\<,     O/ O    '
C[15]='           __O     `|<,     0| 0    '
C[16]='           __O     `\<,     O/ O    '
C[17]='           __O     `|<,     0| 0    '
C[18]='           __O     `\<,     O/ O    '
C[19]='           __O     `|<,     0| 0    '
C[20]='           __O     `\<,     O/ O    '
C[21]='           __O     `|<,     0| 0    '
C[22]='           __O     `\<,     O/ O    '
C[23]='           __O     `|<,     0| 0    '
C[24]='           __O     `\<,     O/ O    '
C[25]='           __O     `|<,     0| 0    '
C[26]='           __O     `\<,     O/ O    '
C[27]='           __O     `|<,     0| 0    '
C[28]='           __O     `\<,     O/ O    '
C[29]='           __O     `|<,     0| 0    '
C[30]='           __O     `\<,     O/ O    '
C[31]='           __O     `|<,     0| 0    '
C[32]='           __O     `\<,     O/ O    '
C[33]='           __O     `|<,     0| 0    '
C[34]='           __O     `\<,     O/ O    '
C[35]='           __O     `|<,     0| 0    '
C[36]='           __O     `\<,     O/ O    '
C[37]='           __O     `|<,     0| 0    '
C[38]='           __O     `\<,     O/ O    '
C[39]='           __O     `|<,     0| 0    '
C[40]='           __O     `\<,     O/ O    '
C[41]='           __O     `|<,     0| 0    '
C[42]='           __O     `\<,     O/ O    '
C[43]='           __O     `|<,     0| 0    '
C[44]='           __O     `\<,     O/ O    '
C[45]='           __O     `|<,     0| 0    '
C[46]='           __O     `\<,     O/ O    '
C[47]='           __O     `|<,     0| 0    '
C[48]='           __O     `\<,     O/ O    '
C[49]='           __O     `|<,     0| 0    '
C[50]='           __O     `\<,     O/ O    '
C[51]='           __O     `|<,     0| 0    '
C[52]='           __O     `\<,     O/ O   /'
C[53]='           __O     `|<,   / 0| 0  / '
C[54]='           __O   / `\<,  /  O/ O /  '
C[55]='        /  __O  /  `|<, /   0| 0|   '
C[56]='       /   __O /   `\<,/    O/ O    '
C[57]='      /    __O/    `|<,     0|/0    '
C[58]='     /     __O     `\<,     O/ O    '
C[59]='    /      __O     `|<,     0| 0    '
C[60]='   /       __0     `\<,    /O/ O    '
C[61]='  /       /__0    /`\<,     0/ 0    '
C[62]=' /       / __0     `\<,     O/ O    '
C[63]='/          __0     `\<,     0/ 0    '
C[64]='           __0     `\<,     O/ O    '
C[65]=' \0/       |       `\_,     0/ 0  '
C[66]=' \0/       |       `\_,     O/ O  '
C[67]=' \0/       |       `\_,     0/ 0  '
C[68]=' \0/       |       `\_,     O/ O  '
C[69]=' \0/       |       `\_,     0/ 0  '
C[70]=' \0/       |       `\_,     O/ O  '
C[71]=' \0/       |       `\_,     0/ 0  '
C[72]=' \0/       |       `\_,     O/ O  '
C[73]=' \0/       |       `\_,     0/ 0  '
C[74]=' \0/       |       `\_,     O/ O  '
C[75]=' \0/       |       `\_,     0/ 0  '
C[76]='           __0     `\<,     O/ O    '
C[77]='           __0     `\<,     0/ 0    '
C[78]='           __0     `\<,     O/ O    '
C[79]='           __0     `\<,     0/ 0    '
C[80]='           __0     `\<,     O/ O    '
C[81]='           __O     `\<,     O/ O    '
C[82]='           __O     `|<,     0| 0    '
C[83]='           __O     `\<,     O/ O    '
C[84]='           __O     `|<,     0| 0    '
C[85]='           __O     `\<,     O/ O    '
C[86]='           __O     `|<,     0| 0    '
C[87]='           __O     `\<,     O/ O    '
C[88]='            __O     `|<,     0| 0   '
C[89]='             __O     `\<,     O/ O  '
C[90]='              __O     `|<,     0| 0 '
C[91]='               __O     `\<,     O/ O'
C[92]='                __      `|<      0| '
C[93]='                 _       `\       O/'
C[94]='                          `        0'
C[95]='                                    '
C[96]='                                    '
C[97]='                                    '
C[98]='                                    '
C[99]='                                    '
C[100]='                                    '
C[101]='                                    '
C[102]='                                    '
C[103]='                                    '
C[104]='                                    '
C[105]='                                    '
C[106]='                                    '
C[107]='                                    '
C[108]='                                    '

step=$(($step+1))

B=${B:1:11}${B:0:1}

if [ $step -gt 108 ]
then
    step=1
fi

echo step=$step > $counter
echo B=\"$B\" >> $counter

print() {
    L="$1"
    L[1]="${L:0:9}"
    L[2]="${L:9:9}"
    L[3]="${L:18:9}"
    L[4]="${L:27:9}"
    for n in 1 2 3 4
    do
	echo "${L[$n]}"
    done
}

echo "${B:0:9}"

print "${C[$step]}"

